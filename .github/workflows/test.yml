# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Run Unit Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  test:
    runs-on: ubuntu-latest

     # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:17
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432


    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Check out code into Go module directory
      uses: actions/checkout@v3


    #   # Migrations set up 
    # - name: Download Golang Migrate binary
    #   run: curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.3/migrate.linux-amd64.tar.gz -o migrate.tar.gz
          
    # - name: Extract migrate binary
    #   run: tar -xvzf migrate.tar.gz
          
    # - name: Move binary to /usr/bin
    #   run: sudo mv migrate /usr/bin/migrate && chmod +x /usr/bin/migrate
          
    # - name: Check migrate version
    #   run: migrate -version


    # - name: Run migrations
    #   run: make migrateup

    - name: Test
      run: make test
